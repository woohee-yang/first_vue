{"ast":null,"code":"import CellContents from \"./CellContents.vue\";\nimport { index } from \"../store\";\nexport default {\n  name: \"InCell\",\n  // inject: ['eventBus'],\n  emits: [\"inputContents\"],\n  components: {\n    CellContents\n  },\n  data() {\n    return {\n      x: '',\n      y: '',\n      curPos: {\n        x: -1,\n        y: -1\n      },\n      contents: '',\n      pickPos: false\n    };\n  },\n  methods: {\n    updatePos() {\n      this.pickPos = !this.pickPos;\n    },\n    inputPosition() {\n      if (this.x > 0 && this.x <= this.index.arr.length) {\n        if (this.y > 0 && this.y <= this.index.arr[0].length) {\n          this.curPos.x = this.x - 1;\n          this.curPos.y = this.y - 1;\n        }\n      } else {\n        alert('Invalid cell position!');\n      }\n    }\n  },\n  watch: {\n    pickPos: function () {\n      this.inputPosition();\n      // console.log(this.curPos.x, this.curPos.y);\n    }\n  }\n};","map":{"version":3,"mappings":"AAiBA;AACA;AACA;EACAA;EACA;EACAC,QACA,gBACA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;QACAF;QACAC;MACA;MACAE;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACA;UACA;UACA;QACA;MACA,OACA;QACAC;MACA;IACA;EACA;EACAC;IACAL;MACA;MACA;IACA;EACA;AACA","names":["name","emits","components","CellContents","data","x","y","curPos","contents","pickPos","methods","updatePos","inputPosition","alert","watch"],"sourceRoot":"src/components","sources":["CellPosition.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h3 style=\"margin-left:5%\">1. Choose a cell</h3>\r\n    <p style=\"margin-left:5%\">\r\n      column : <input placeholder=\"column\" required minlength=\"4\" maxlength=\"8\" size=\"10\" v-model=\"x\"/>\r\n      row : <input placeholder=\"row\" required minlength=\"4\" maxlength=\"8\" size=\"10\" v-model=\"y\"/>\r\n      <!-- <p style=\"margin-left:20px\" >( column : {{ this.x }}, row : {{ this.y }} )</p> -->\r\n      <button @click=\"updatePos\" style=\"margin-left:10px\">input</button> </p>\r\n    <!-- <p style=\"margin-left:20px\">x : {{ curPos.x }} , y : {{ curPos.y }}</p> -->\r\n    <hr/>\r\n    <CellContents :pos = curPos></CellContents>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport CellContents from \"./CellContents.vue\"\r\nimport { index } from \"../store\"\r\nexport default {\r\n  name : \"InCell\",\r\n  // inject: ['eventBus'],\r\n  emits: [\r\n    \"inputContents\",\r\n  ],\r\n  components:{\r\n    CellContents\r\n  },\r\n  data(){\r\n    return {\r\n      x: '',\r\n      y: '',\r\n      curPos: {\r\n        x: -1,\r\n        y: -1,\r\n      },\r\n      contents : '',\r\n      pickPos: false,\r\n    }\r\n  },\r\n  methods: {\r\n    updatePos(){\r\n      this.pickPos = !this.pickPos;\r\n    },\r\n    inputPosition(){\r\n      if(this.x > 0 && this.x <= this.index.arr.length){\r\n        if(this.y > 0 && this.y <= this.index.arr[0].length){\r\n          this.curPos.x = this.x-1\r\n          this.curPos.y = this.y-1\r\n        }\r\n      }\r\n      else{\r\n        alert('Invalid cell position!')\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    pickPos: function () {\r\n      this.inputPosition();\r\n      // console.log(this.curPos.x, this.curPos.y);\r\n    },\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}